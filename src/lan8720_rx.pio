.program lan8720_rx

; pin mapping:
; pin+0: RX0
; pin+1: RX1
; pin+2: RXEN

.wrap_target
  wait 0 pin 2       ; Wait while TX0, TX1 and TXEN are nonzero
  wait 0 pin 0       ;
  wait 0 pin 1       ;
  
  wait 1 pin 2       ; Detect preamble
  wait 1 pin 0       ;
  
  wait 1 pin 1       ; Detect start frame delimiter
  
  wait 0 gpio 22     ; Wait single clock
  wait 1 gpio 22     ;

recvloop:
  wait 0 gpio 22     ; wait for clock LO
  wait 1 gpio 22     ; wait for clock HI
  in pins 2          ; sample data
  jmp pin recvloop   ; if data valid, repeat

  irq wait 0 rel     ; let the interrupt handler to process packet
.wrap

% c-sdk {

static inline void lan8720_rx_init(PIO pio, uint sm, uint offset, uint pin) {
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 3, false);

    pio_sm_config c = lan8720_rx_program_get_default_config(offset);
    sm_config_set_in_pins(&c, pin);

    pio_gpio_init(pio, pin);
    pio_gpio_init(pio, pin + 1);
    pio_gpio_init(pio, pin + 2);
    
    sm_config_set_in_shift(&c, true, true, 8);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
    sm_config_set_jmp_pin(&c, pin + 2);

    sm_config_set_clkdiv(&c, 1);
    
    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}
